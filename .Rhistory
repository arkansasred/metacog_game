q()
install.packages('ggplot2')
library(ggplot2)
install.packages('ggplot2')
install.packages('Rcpp')
install.packages('ggplot2')
install.packages('ggplot2')
update.packages(checkBuilt = TRUE)
install.packages('ggplot2')
install.packages('dplyr')
testdat<-data.frame(x=1:10, y=rnorm(100))
testdat[50,2]<-100
plot(testdat$x,testdat$y, type="l", ylim=c(-3,3))
library(ggplot)
library(ggplot2)
g<-ggplot(testdat, aes(x=x,y=y))
g+geom_line()
testdat<-data.frame(x=1:100, y=rnorm(100))
plot(testdat$x,testdat$y, type="l", ylim=c(-3,3))
testdat[50,2]<-100
g<-ggplot(testdat, aes(x=x,y=y))
g+geom_line()
g+geom_line() + ylim(-3,3)
library(nlme)
?nlme
?BodyWeight
library(datasets)
data(airquality)
qplot(Wind, Ozone, airquality)
qplot(Wind, Ozone, data=airquality)
qplot(Wind, Ozone, data=airquality, facets= .~factor(Month))
airquality=transform(airquality, Month=factor(Month))
qplot(Wind, Ozone, data=airquality, facets= .~Month)
?geom
??geom
movies
qplot(votes, rating, data=movies) + geom_smooth()
qplot(votes, rating, data=movies, smooth="loess")
qplot(votes, rating, data=movies) + geom_smooth()
qplot(votes, rating, data=movies) + geom_smooth()
library(ggplot2)
qplot(votes, rating, data=movies) + geom_smooth()
install.packages('seewave')
## tonal synthesis: normal function applied to the amplitude envelope and the instantaneous frequency
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
library(seewave)
## tonal synthesis: normal function applied to the amplitude envelope and the instantaneous frequency
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
install.packages(c("fftw", "tuneR", "rgl", "rpanel"))
install.packages(c("fftw", "tuneR", "rgl", "rpanel"))
library(seewave)
install.packages(c("fftw", "tuneR", "rgl", "rpanel"))
## tonal synthesis: normal function applied to the amplitude envelope and the instantaneous frequency
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
## tonal synthesis: normal function applied to the amplitude envelope and the instantaneous frequency
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
library(seewave)
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
remove.packages("seewave")
library(seewave)
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
setwd('Documents//AP_Game')
source('~/Documents/AP_Game/readTrajectories.R')
five1<-readSubject)
five1<-readSubject('Subject 51')
five1<-readSubject('./Subject 51')
five1<-readSubject('./Subject 5')
five1<-readSubject('./Subject 51')
five2<-readSubject('./Subject 52')
five2<-readSubject('./Subject 53')
five2<-readSubject('./Subject 52')
five3<-readSubject('./Subject 53')
newData<-cbind(five1,five2,five3)
newData
newData<-rbind(five1,five2,five3)
newData
write.csv(newData, '51-53.csv', row.names = F)
trajects<-readTrajectories()
trajects<-readAllTrajectories()
library(ggplot2)
traj<-trajects[[1]]
trajectData.tbl<-tbl_df(traj)
summaryByLevel<-trajectData.tbl%>%
group_by(Condition)%>%
summarise_each(funs(mean), -Subject)
summmaryB
summmaryByLevel
library(dplyr)
trajectData.tbl<-tbl_df(traj)
summaryByLevel<-trajectData.tbl%>%
group_by(Condition)%>%
summarise_each(funs(mean), -Subject)
summaryByLevel
setwd('~/Desktop/metacog_game/')
source('~/Desktop/metacog_game/analyzeGeneralization.R')
gen<-readAllGen()
mse<-summarySE(gen, measurevar = "Overall", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Overall, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Overall-se, ymax=Overall+se), width=.1)
dev.off()
dev.off()
mse<-summarySE(gen, measurevar = "Overall", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Overall, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Overall-se, ymax=Overall+se), width=.1)
mse<-summarySE(gen, measurevar = "Phi", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Phi, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Phi-se, ymax=Phi+se), width=.1)
aov(Phi~factor(Condition), gen)
summary(aov(Phi~factor(Condition), gen))
summary(aov(Gamma~factor(Condition), gen))
summary(aov(Gen~factor(Condition), gen))
summary(aov(Overall~factor(Condition), gen))
source('~/Desktop/metacog_game/analyzePredictions.R')
getPredictions()
source('~/Desktop/metacog_game/analyzePredictions.R')
getPredictions()
preds<-getPredictions()
preds<-preds[[1]]
summary(aov(NumberActual~Condition, preds))
summary(aov(NumberActual~factor(Condition)/Block, preds))
summary(lm(NumberActual~factor(Condition)/Block, preds))
analyzePredictions()
predictions<-getPredictions()
preds<-predictions[[1]]
mse<-summarySE(preds, measurevar = "NumberActual", groupvars = c("Condition", "Block"))
ggplot(mse, aes(x = Block, y = NumberActual, color = factor(Condition))) + geom_point(alpha = 1) + geom_smooth(method = lm)
preds.tbl<-tbl_df(preds)
summaryPreds<-preds.tbl%>%
group_by(Condition, Block)%>%
summarise_each(funs(sd), -Subject)
summaryPreds
training<-subset(preds, Block %in% 1:6)
predictions<-getPredictions()
preds<-predictions[[1]]
mse<-summarySE(training, measurevar = "NumberActual", groupvars = c("Condition", "Block"))
ggplot(mse, aes(x = Block, y = NumberActual, color = factor(Condition))) + geom_point(alpha = 1) + geom_smooth(method = lm)
preds.tbl<-tbl_df(preds)
summaryPreds<-preds.tbl%>%
group_by(Condition, Block)%>%
summarise_each(funs(sd), -Subject)
summaryPreds
library(Hmisc)
library(HMisc)
install.packages('Hmisc')
library(Hmisc)
cut2(preds$NumberActual)
cut2(preds$NumberActual, 3)
summary(cut2(preds$NumberActual, 3))
summary(cut2(preds$NumberActual, 4))
summary(cut2(preds$NumberActual, 5))
summary(cut2(preds$NumberActual, 6))
View(preds)
View(preds)
highPerform<-subest(preds, Block == 9 & NumberActual>4)
highPerform<-subset(preds, Block == 9 & NumberActual>4)
highPerform
View(highPerform)
View(highPerform)
?subset
highPerform<-subset(preds, Block == 9 & NumberActual>4, drop = F)
View(highPerform)
View(preds)
View(preds)
highPerform<-subset(preds, Block == 9)
View(highPerform)
View(highPerform)
highPerform<-subset(preds, !(Subject == 13 | Subject == 15| Subject == 16), drop = F)
summary(highPerform)
highPerform
summary(lm(NumberActual~factor(Condition)/Block, highPerform))
mse<-summarySE(highPerform, measurevar = "NumberActual", groupvars = c("Condition", "Block"))
ggplot(mse, aes(x = Block, y = NumberActual, color = factor(Condition))) + geom_point(alpha = 1) + geom_smooth(method = lm)
preds.tbl<-tbl_df(preds)
summaryPreds<-preds.tbl%>%
group_by(Condition, Block)%>%
summarise_each(funs(sd), -Subject)
summaryPreds
View(preds)
View(preds)
View(gen)
View(gen)
highPerform<-subset(preds, !(Subject == 13 | Subject == 17| Subject == 6 | Subject == 21), drop = F)
mse<-summarySE(highPerform, measurevar = "NumberActual", groupvars = c("Condition", "Block"))
ggplot(mse, aes(x = Block, y = NumberActual, color = factor(Condition))) + geom_point(alpha = 1) + geom_smooth(method = lm)
preds.tbl<-tbl_df(preds)
summaryPreds<-preds.tbl%>%
group_by(Condition, Block)%>%
summarise_each(funs(sd), -Subject)
summaryPreds
highPerform<-subset(preds, !(Subject == 13 | Subject == 17| Subject == 6 | Subject == 21 | Subject == 18), drop = F)
mse<-summarySE(highPerform, measurevar = "NumberActual", groupvars = c("Condition", "Block"))
ggplot(mse, aes(x = Block, y = NumberActual, color = factor(Condition))) + geom_point(alpha = 1) + geom_smooth(method = lm)
preds.tbl<-tbl_df(preds)
summaryPreds<-preds.tbl%>%
group_by(Condition, Block)%>%
summarise_each(funs(sd), -Subject)
summaryPreds
highPerform<-subset(preds, !(Subject == 13 | Subject == 16| Subject == 6 | Subject == 28 | Subject == 25), drop = F)
mse<-summarySE(highPerform, measurevar = "NumberActual", groupvars = c("Condition", "Block"))
ggplot(mse, aes(x = Block, y = NumberActual, color = factor(Condition))) + geom_point(alpha = 1) + geom_smooth(method = lm)
preds.tbl<-tbl_df(preds)
summaryPreds<-preds.tbl%>%
group_by(Condition, Block)%>%
summarise_each(funs(sd), -Subject)
summaryPreds
highPerform<-subset(preds, !(Subject == 13 | Subject == 16| Subject == 6 | Subject == 28 | Subject == 24 | Subject == 25), drop = F)
mse<-summarySE(highPerform, measurevar = "NumberActual", groupvars = c("Condition", "Block"))
ggplot(mse, aes(x = Block, y = NumberActual, color = factor(Condition))) + geom_point(alpha = 1) + geom_smooth(method = lm)
preds.tbl<-tbl_df(preds)
summaryPreds<-preds.tbl%>%
group_by(Condition, Block)%>%
summarise_each(funs(sd), -Subject)
summaryPreds
cut2(preds$NumberActual/Block)
cut2(preds$NumberActual/preds$Block)
x<- cut2(preds$NumberActual/preds$Block)
x
summary(x)
x<- cut2(preds$NumberActual/preds$Block, cut = 5)
summary(x)
x<- cut2(preds$NumberActual, cut = 5)
summary(x)
mse<-summarySE(highPerform, measurevar = "NumberActual", groupvars = c("Condition", "Block"))
ggplot(mse, aes(x = Block, y = NumberActual, color = factor(Condition))) + geom_point(alpha = 1)
preds.tbl<-tbl_df(preds)
summaryPreds<-preds.tbl%>%
group_by(Condition, Block)%>%
summarise_each(funs(sd), -Subject)
summaryPreds
mse<-summarySE(preds, measurevar = "NumberActual", groupvars = c("Condition", "Block"))
ggplot(mse, aes(x = Block, y = NumberActual, color = factor(Condition))) + geom_point(alpha = 1)
preds.tbl<-tbl_df(preds)
summaryPreds<-preds.tbl%>%
group_by(Condition, Block)%>%
summarise_each(funs(sd), -Subject)
summaryPreds
highPerform<-subset(gen, !(Subject == 13 | Subject == 16| Subject == 6 | Subject == 28 | Subject == 25), drop = F)
mse<-summarySE(gen, measurevar = "Overall", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Overall, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Overall-se, ymax=Overall+se), width=.1)
mse<-summarySE(gen, measurevar = "Phi", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Phi, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Phi-se, ymax=Phi+se), width=.1)
mse<-summarySE(gen, measurevar = "Gamma", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Gamma, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Phi-se, ymax=Phi+se), width=.1)
mse<-summarySE(gen, measurevar = "Gamma", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Gamma, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Gamma-se, ymax=Gamma+se), width=.1)
View(highPerform)
View(highPerform)
highPerform<-subset(gen, !(Subject == 13 | Subject == 16| Subject == 6 | Subject == 28 | Subject == 25 | Subject == 32), drop = F)
mse<-summarySE(gen, measurevar = "Gamma", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Gamma, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Gamma-se, ymax=Gamma+se), width=.1)
mse<-summarySE(highPerform, measurevar = "Gamma", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Gamma, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Gamma-se, ymax=Gamma+se), width=.1)
mse<-summarySE(highPerform, measurevar = "Phi", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Phi, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Phi-se, ymax=Phi+se), width=.1)
mse<-summarySE(highPerform, measurevar = "Gamma", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Gamma, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Gamma-se, ymax=Gamma+se), width=.1)
mse<-summarySE(highPerform, measurevar = "Generalization", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Generalization, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Generalization-se, ymax=Generalization+se), width=.1)
mse<-summarySE(highPerform, measurevar = "Gen", groupvars = "Condition")
ggplot(mse, aes (x = factor(Condition), y = Gen, fill = factor(Condition))) + geom_bar(stat = "identity")+ geom_errorbar(aes(ymin=Gen-se, ymax=Gen+se), width=.1)
summary(gen)
mean(gen$Overall)
sd(gen$Overall)
mn<-mean(gen$Overall)
sd<-sd(gen$Overall)
summary(sd)
mn- 3*sd
mn- 2*sd
