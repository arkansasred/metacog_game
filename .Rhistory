q()
install.packages('ggplot2')
library(ggplot2)
install.packages('ggplot2')
install.packages('Rcpp')
install.packages('ggplot2')
install.packages('ggplot2')
update.packages(checkBuilt = TRUE)
install.packages('ggplot2')
install.packages('dplyr')
testdat<-data.frame(x=1:10, y=rnorm(100))
testdat[50,2]<-100
plot(testdat$x,testdat$y, type="l", ylim=c(-3,3))
library(ggplot)
library(ggplot2)
g<-ggplot(testdat, aes(x=x,y=y))
g+geom_line()
testdat<-data.frame(x=1:100, y=rnorm(100))
plot(testdat$x,testdat$y, type="l", ylim=c(-3,3))
testdat[50,2]<-100
g<-ggplot(testdat, aes(x=x,y=y))
g+geom_line()
g+geom_line() + ylim(-3,3)
library(nlme)
?nlme
?BodyWeight
library(datasets)
data(airquality)
qplot(Wind, Ozone, airquality)
qplot(Wind, Ozone, data=airquality)
qplot(Wind, Ozone, data=airquality, facets= .~factor(Month))
airquality=transform(airquality, Month=factor(Month))
qplot(Wind, Ozone, data=airquality, facets= .~Month)
?geom
??geom
movies
qplot(votes, rating, data=movies) + geom_smooth()
qplot(votes, rating, data=movies, smooth="loess")
qplot(votes, rating, data=movies) + geom_smooth()
qplot(votes, rating, data=movies) + geom_smooth()
library(ggplot2)
qplot(votes, rating, data=movies) + geom_smooth()
install.packages('seewave')
## tonal synthesis: normal function applied to the amplitude envelope and the instantaneous frequency
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
library(seewave)
## tonal synthesis: normal function applied to the amplitude envelope and the instantaneous frequency
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
install.packages(c("fftw", "tuneR", "rgl", "rpanel"))
install.packages(c("fftw", "tuneR", "rgl", "rpanel"))
library(seewave)
install.packages(c("fftw", "tuneR", "rgl", "rpanel"))
## tonal synthesis: normal function applied to the amplitude envelope and the instantaneous frequency
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
## tonal synthesis: normal function applied to the amplitude envelope and the instantaneous frequency
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
library(seewave)
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
remove.packages("seewave")
library(seewave)
norm <- rep(dnorm(-4000:3999, sd=1000), 2)
toto <- synth2(env=norm, ifreq=500+(norm/max(norm))*1000, f=8000, plot=TRUE, osc=TRUE, ovlp=85)
setwd('Desktop//metacog_game')
source('~/Desktop/metacog_game/analyzeGeneralization.R')
anna<-analyzeGeneralization('generalization.csv')
subjData<-read.table('generalization.csv', sep = ",", col.names = c('alien', 'response', 'confidenceRating', 'RT'))
subjData$alien<-as.character(subjData$alien)
source('~/Desktop/metacog_game/analyzeGeneralization.R')
anna<-analyzeGeneralization('generalization.csv')
subjData<-read.table('generalization.csv', sep = ",")
subjData$alien<-as.character(subjData$alien)
subjData
read.csv('generalData.csv')
read.csv('generalization.csv')
s<-read.csv('generalization.csv')
str(s)
source('~/Desktop/metacog_game/analyzeGeneralization.R')
anna<-analyzeGeneralization('generalization.csv')
anna
unSeenAliens<-c("A04", "A06", "A10", "A12", "B08", "B09", "B11", "B12")
subjData<-read.csv('generalization.csv')
subjData$alienType<-as.character(subjData$alienType)
getAccur<-function(alien,response){
if((substr(alien,1,1)=='A' & response == 's') | (substr(alien,1,1)=='B' & response=='c')){
1
}
else{0}
}
codeConf<-function(rating){
if(rating>3){
1
}
else{0}
}
accuracies<-vector()
codedConfs<-vector()
subjData
for (i in 1:nrow(subjData)){
acc<-getAccur(subjData$alienType[i], subjData$response[i])
conf<-codeConf(subjData$confidenceRating[i])
accuracies<-c(accuracies,acc)
codedConfs<-c(codedConfs, conf)
}
source('~/Desktop/metacog_game/analyzeGeneralization.R')
anna<-analyzeGeneralization('generalization.csv')
unSeen<-subjData[subjData$alienType%in%unSeenAliens,]
unSeen
subjData<-cbind(subjData,accuracies, codedConfs)
unSeen<-subjData[subjData$alienType%in%unSeenAliens,]
unSeen
subjData
17/96
96-17
79/96
length(unSeen)
nrow(unSeen)
5/32
32-5
27/32
26/32
length(accuracies)
sum(accuracies)
78/96
